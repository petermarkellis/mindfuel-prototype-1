name: Keep Supabase Database Alive

on:
  schedule:
    # Run every 15 minutes to keep database active
    # More frequent pings for better reliability
    - cron: '*/15 * * * *'  # Every 15 minutes
  workflow_dispatch: # Allow manual trigger

jobs:
  keep-alive:
    runs-on: ubuntu-latest
    
    # Add timeout to prevent hanging
    timeout-minutes: 3
    
    steps:
      - name: Log workflow start
        run: |
          echo "🚀 Keep-alive workflow started at $(date)"
          echo "⏰ Current time: $(date -u)"
          echo "🌍 Timezone: UTC"

      - name: Check if secrets are available
        run: |
          echo "🔍 Checking if Supabase secrets are configured..."
          if [ -n "${{ secrets.VITE_SUPABASE_URL }}" ] && [ -n "${{ secrets.VITE_SUPABASE_ANON_KEY }}" ]; then
            echo "✅ Supabase secrets are configured - will ping database"
            echo "db_ping=true" >> $GITHUB_OUTPUT
          else
            echo "⚠️ Supabase secrets not configured - will use HTTP ping instead"
            echo "db_ping=false" >> $GITHUB_OUTPUT
          fi
        id: check_secrets

      - name: HTTP Ping to Supabase (No secrets required)
        if: steps.check_secrets.outputs.db_ping == 'false'
        run: |
          echo "🌐 Pinging Supabase via HTTP..."
          # Extract project ID from your Supabase URL (you'll need to replace this)
          # This is a simple HTTP ping that doesn't require authentication
          curl -s -o /dev/null -w "HTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
            "https://your-project-id.supabase.co/rest/v1/" || echo "⚠️ HTTP ping completed (expected for auth endpoints)"

      - name: Database Ping (With secrets)
        if: steps.check_secrets.outputs.db_ping == 'true'
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        run: |
          echo "🔄 Pinging Supabase database with authentication..."
          node -e "
          const { createClient } = require('@supabase/supabase-js');
          
          const supabaseUrl = process.env.VITE_SUPABASE_URL;
          const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY;
          
          console.log('🔗 Supabase URL:', supabaseUrl?.substring(0, 30) + '...');
          
          const supabase = createClient(supabaseUrl, supabaseKey);
          
          // Simple query to keep database active
          supabase
            .from('nodes')
            .select('id')
            .limit(1)
            .then(({ data, error }) => {
              if (error) {
                console.error('❌ Database ping failed:', error.message);
                process.exit(1);
              } else {
                console.log('✅ Database ping successful');
                console.log('📊 Database is active and responsive');
                process.exit(0);
              }
            })
            .catch((err) => {
              console.error('❌ Unexpected error:', err.message);
              process.exit(1);
            });
          "

      - name: Log completion
        run: |
          echo "✅ Keep-alive job completed successfully"
          echo "🕐 Completed at: $(date)"
          echo "🔗 Database should remain active"
